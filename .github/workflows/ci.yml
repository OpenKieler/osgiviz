# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI

on:
  push:
    branches: [ ci ] # TODO: switch to master again once this is working as intended.
  pull_request:
    branches: [ master ]

jobs:
  mavenBuilds:

    runs-on: ubuntu-latest

    steps:
      # Setup
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Maven build update site
      - name: build update site
        run: MAVEN_OPTS="-Xmx2048M" mvn clean package --file build/pom.xml

      # Maven build language server
      - name: build language server
        run: MAVEN_OPTS="-Xmx2048M" mvn clean package -P ls --file build/pom.xml
      
      # TODO: find a good way to host this update site directly without zipping it for access for other builds.
      # For example this: https://github.com/marketplace/actions/deploy-to-github-pages
      # this: https://github.com/peaceiris/actions-gh-pages
      # or this: http://www.lorenzobettini.it/2021/03/publishing-an-eclipse-p2-composite-repository-on-github-pages/
      - name: Archive OSGiViz Repository Artifact
        uses: actions/upload-artifact@v2
        with:
          name: OSGiViz Repository Artifact
          path: build/de.cau.cs.kieler.osgiviz.repository/target/repository/
      - name: Archive OSGimodel Generator CLI
        uses: actions/upload-artifact@v2
        with:
          name: OSGimodel Generator CLI
          path: plugins/de.scheidtbachmann.osgimodel.model.generate/target/de.scheidtbachmann.osgimodel.model.generate-*.jar
      - name: Archive OSGiViz Language Server
        uses: actions/upload-artifact@v2
        with:
          name: OSGiViz Language Server
          path: build/de.cau.cs.kieler.osgiviz.language.server.cli/target/exe/

      
  
  # extension:
  #   needs: CheckoutAndBuildUpdateSite

  #   runs-on: ubuntu-latest

  #   steps:
  #     # TODO: Setup the extension build